name: Terraform AWS Transit Gateway VPC Attachment Module
#logo: logo/logo.jpg

license: "APACHE2"

copyrights:
  - name: "Cloud Ops Works LLC"
    url: "https://cloudops.works"
    year: "2024"

github_repo: cloudopsworks/terraform-module-aws-transit-gateway-vpc-attachment

description: |-
  This Terraform module, when used with Terragrunt, automates the creation and configuration of AWS Transit Gateway VPC attachments. It streamlines cross-region and cross-account networking by attaching one or more VPC subnets to an existing Transit Gateway (TGW).
  #### Features
  - Simplifies the creation of [AWS Transit Gateway VPC attachments](https://docs.aws.amazon.com/vpc/latest/tgw/tgw-vpc-attachments.html).
  - Enables attaching multiple subnets in multiple Availability Zones to a specified Transit Gateway.
  - Supports optional route propagation and association with Transit Gateway Route Tables.
  - Adheres to straightforward naming and tagging strategies.

# Introduction to the project
introduction: |-
  #### Architecture Overview
  1. **Transit Gateway**: Accepts an existing TGW ID.
  2. **VPC Subnets**: Maps subnets from your VPC to the Transit Gateway.
  3. **Attachment Management**: Creates an `aws_ec2_transit_gateway_vpc_attachment` resource.
  4. **Route Table Association/Propagation**: Optionally associates route tables with the attachment and propagates routes automatically.
  #### Prerequisites
  - A working AWS Transit Gateway in the target region.
  - Existing VPC and subnets for the attachment.
  - Terraform **0.13+** and Terragrunt installed.
  - AWS credentials configured (e.g., through AWS CLI or environment variables).

# How to use this project
usage: |-
  #### Usage with Terragrunt
  Below is an example of how you might structure a Terragrunt configuration. Make sure you have Terragrunt installed and your folder structure set up appropriately.
  ```hcl
  # terragrunt.hcl
  include {
    path = find_in_parent_folders()
  }
    
  terraform {
    source = "git::https://github.com/cloudopsworks/terraform-module-aws-transit-gateway-vpc-attachment.git?ref=vX.Y.Z"
  }
    
  inputs = {
    # Required Inputs
    name               = "example-tgw-attachment"
    transit_gateway_id = "tgw-0123456789abcdef0"
    subnets            = ["subnet-12345", "subnet-67890"]
  
    # Optional Inputs
    associate_route_table = true
    propagate_route_table = false
    route_table_ids       = ["tgw-rtb-12345678"]
    tags = {
    Environment = "dev"
    Project     = "networking"
    }
  }
  ```
  Make sure to replace `tgw-0123456789abcdef0`, `subnet-12345`, and other placeholder values with valid IDs from your environment.

# Example usage
examples: |-
  #### Alternate Example
  ``` hcl
  # terragrunt.hcl
  include {
    path = find_in_parent_folders()
  }
    
  terraform {
    source = "git::https://github.com/cloudopsworks/terraform-module-aws-transit-gateway-vpc-attachment.git"
  }
    
  inputs = {
    name                 = "prod-attachment"
    transit_gateway_id   = "tgw-abc123"
    subnets              = ["subnet-abc111", "subnet-xyz222"]
    associate_route_table = true
    propagate_route_table = true
    route_table_ids       = ["tgw-rtb-aaa111", "tgw-rtb-bbb222"]
    tags = {
    Application = "CustomerPortal"
    Owner       = "ITOps"
    }
  }
  ```

# How to get started quickly
quickstart: |-
  #### Getting Started (Terragrunt Workflow)
  1. **Setup directory**: In your Terragrunt directory (e.g., `live` directory), create a subfolder (e.g., `transit-gateway-attachment`).
  2. **Add terragrunt.hcl**: Paste in one of the usage examples above, updating the variables as needed.
  3. **Run commands**:
    - `terragrunt init` to initialize the backend and module source.
    - `terragrunt plan` to see proposed changes.
    - `terragrunt apply` to create the VPC attachment.
  
  #### Testing
  - Validate your Terragrunt configuration: `terragrunt validate`.
  - For advanced testing, consider integrating [Terratest](https://github.com/gruntwork-io/terratest) to automate tests around your configuration.

include:
  - "docs/targets.md"
  - "docs/terraform.md"

contributors:
  - name: "Cristian Beraha"
    github: "berahac"